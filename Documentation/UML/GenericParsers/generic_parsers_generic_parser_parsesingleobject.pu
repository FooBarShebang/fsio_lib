@startuml generic_parsers_generic_parser_parsesingleobject

title Activity Diagram of the Method fsio_lib.GenericParsers.GenericParser.parseSingleObject()

start

:<b>Source</b> - any supported type, the souce data object
<b>TargetClass</b> - any supported class / type of type to be create the target instance
<b>Template</b> - dictionary, the file parsing template
<b>Logger</b>  - (optional), the logger instance with the standard API, defaults to None
<b>StrictTarget</b> - (optional) bool, mapping flag, defaults to True
<b>StrictSorce</b> - (optional) bool, mapping flag, defaults to True
<b>ForceTarget</b> - (optional) bool, mapping flag, defaults to False
<

if (in <b>try:</b>) then (no exception)
    :check <b>Template</b>, see <b>_checkTemplate</b>()|
    
    :instantiate <b>TargetClass</b> -> <b>Target</b>;
    
    :<b>Template</b>["DataMapping"] -> <b>MapRules</b> ;
    
    :Map <b>Source</b> to <b>Target</b> using the function call\n<b>fsio_lib.StructureMapping.MapValues(Source, Target, MapRules, Logger, StrictTarget, StrictSource, ForceTarget)</b> |
    
    if (<b>Logger</b> is provided (not None)?) then (Yes)
        :log as INFO the result of <b>Source</b> to <b>Target</b> mapping;
    endif
    
    :return <b>Target</b> object>
    
    stop
else (in <b>except:</b>) 
    if (<b>Logger</b> is provided (not None)?) then (Yes)
        :log as ERROR the caught exception type and message;
    endif
    
    :re-raise the caught exception;
    
    stop
endif

@enduml